# Copyright (c) Members of the EGEE Collaboration. 2004-2008.
# See http://www.eu-egee.crg/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.crg/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Version info: $Id: Makefile.am,v 1.23 2009/10/14 09:47:14 szamsu Exp $
# Release: $Name:  $

SOAPCPP2=$(GSOAP_LOCATION)/bin/soapcpp2
#SOAPCPP2FLAGS=-c -d/tmp 
SOAPCPP2FLAGS=-c  
#	-c = generate c code

WSDL2H=$(GSOAP_LOCATION)/bin/wsdl2h
#WSDL2H=$(GSOAP_WSDL2H_LOCATION)/bin/wsdl2h
if USE_GSOAP_2_7_10
WSDL2HFLAGS=-c -e -y -I$(GSOAP_LOCATION)/include -z
else
if USE_GSOAP_2_7_13
WSDL2HFLAGS=-c -e -y -I$(GSOAP_LOCATION)/include -I$(GSOAP_LOCATION)/share/gsoap/import  -z
else
WSDL2HFLAGS=-c -e -y
endif
endif
#	-c      generate C source code
#	-e      don't qualify enum names
#	-y      generate typedef synonyms for structs and enums

#-------------------------------------------------------------------------------
# WDSLs, nsmap files
#-------------------------------------------------------------------------------

# srm.v1.1.wsdl
#-------------------------------------------------------------------------------
SRM_V1_1_SOAP_FILES = srmH.h srmStub.h srmC.c srmClient.c ISRM.nsmap

$(SRM_V1_1_SOAP_FILES): srm.v1.1.h
	$(SOAPCPP2) $(SOAPCPP2FLAGS) -p srm srm.v1.1.h

srm.v1.1.h: srm.v1.1.wsdl
	$(WSDL2H) $(WSDL2HFLAGS) -w -t $(top_srcdir)/src/typemap-srmv1.dat $< -o $@

# srm.v2.2.wsdl
#-------------------------------------------------------------------------------
SRM_V2_2_SOAP_FILES = srmv2H.h srmv2Stub.h srmv2C.c srmv2Client.c srmSoapBinding.nsmap

$(SRM_V2_2_SOAP_FILES): srm.v2.2.h
	$(SOAPCPP2) $(SOAPCPP2FLAGS) -p srmv2 srm.v2.2.h

srm.v2.2.h: srm.v2.2.wsdl
	$(WSDL2H) $(WSDL2HFLAGS) -t $(top_srcdir)/src/typemap-srmv2.dat $< -o $@

# fixed nsmap files
#-------------------------------------------------------------------------------
FIXED_NSMAP_FILES = \
	srmSoapBinding+.nsmap

srmSoapBinding+.nsmap: srmSoapBinding.nsmap
	sed 's/struct Namespace namespaces/struct Namespace namespaces_srmv2/' $? > $@

if USE_GSOAP_2_7_9
STDSOAP2_C_FIX=patch -p0 -b stdsoap2.c $(top_srcdir)/src/c/stdsoap2.c.patch
else
STDSOAP2_C_FIX=@echo 'No patch needed for stdsoap2.c'
endif


if USE_GSOAP_2_7_13
LDFLAGS += -L$(GLITE_LOCATION)/lib64
LDFLAGS += -L/usr/lib64
else
# Copy gsoap file
stdsoap2.c: 
	cp -f $(GSOAP_LOCATION)/src/$@ $@
	$(STDSOAP2_C_FIX)
endif

	
# Common Files
soapdefs.h:
	echo "//autogenerated file" > $@
	echo "#undef WITH_NOGLOBAL" >> $@
	echo "#undef SOAP_FMAC3" >> $@
	echo "#undef SOAP_FMAC4" >> $@

#-------------------------------------------------------------------------------
# _PROGRAMS, _LIBRARIES, BUILT_SOURCES...
#-------------------------------------------------------------------------------

dist_include_HEADERS = \
    gfal_srm_ifce.h \
    gfal_srm_ifce_types.h

# executables
bin_PROGRAMS = \
	gfal_srm_ifce_version



# generated source files (to build before other programs and libraries)
BUILT_SOURCES = \
	$(SRM_V1_1_SOAP_FILES) \
	$(SRM_V2_2_SOAP_FILES) \
	$(FIXED_NSMAP_FILES) 

if USE_GSOAP_2_7_13
GFAL_SRM_IFCE_SOURCE_FILES = \
    srm_util.c \
    srmv2C.c \
    srmSoapBinding.c \
    srmv2Client.c \
    srm_dependencies.c \
    srm_version_wrapper.c \
    srmv2_directory_functions.c \
    srmv2_sync_wrapper.c \
    srmv2_async_wrapper.c \
    srmv2_space_management_functions.c \
    srmv2_discovery_functions.c \
    srmv2_permission_functions.c \
    srmSoapBinding+.nsmap \
    srmv2_data_transfer_functions.c \
    gfal_srm_ifce_memory_functions.c 
    
else
GFAL_SRM_IFCE_SOURCE_FILES = \
    srm_util.c \
	stdsoap2.c \
    srmv2C.c \
    srmSoapBinding.c \
    srmv2Client.c \
    srm_dependencies.c \
    srm_version_wrapper.c \
    srmv2_directory_functions.c \
    srmv2_sync_wrapper.c \
    srmv2_async_wrapper.c \
    srmv2_space_management_functions.c \
    srmv2_discovery_functions.c \
    srmv2_permission_functions.c \
    srmSoapBinding+.nsmap \
    srmv2_data_transfer_functions.c \
    gfal_srm_ifce_memory_functions.c 
    
endif


GFAL_SRM_IFCE_CFLAGS = \
    -Wall -Wextra \
	-DGFAL_SECURE \
	-DVERSION=\"$(VERSION)-$(RELEASE)\" \
    -D_GNU_SOURCE \
	-D_LARGEFILE64_SOURCE \
	$(SOAPCPP2_FLAGS)
	
if STATIC_ENABLE 

# libgfal.a
#-------------------------------------------------------------------------------
libgfal_srm_ifce_a_SOURCES = $(GFAL_SRM_IFCE_SOURCE_FILES)

libgfal_srm_ifce_a_CFLAGS = \
	$(GLOBUS_NOTHR_CFLAGS) \
	$(GLITE_CFLAGS) \
	$(GFAL_SRM_IFCE_CFLAGS) \
	$(GSOAP_CFLAGS) \
	$(CGSI_GSOAP_CFLAGS) 

# libgfal.la
#-------------------------------------------------------------------------------
libgfal_srm_ifce_la_SOURCES = $(GFAL_SRM_IFCE_SOURCE_FILES)



if USE_GSOAP_2_7_13
libgfal_srm_ifce_la_LIBADD = \
	$(GLOBUS_GSS_NOTHR_LIBS) \
	$(GLOBUS_FTP_CLIENT_NOTHR_LIBS) \
	$(CGSI_GSOAP_LIBS) \
	$(GSOAP_LIBS_EMI)
else
libgfal_srm_ifce_la_LIBADD = \
	$(GLOBUS_GSS_NOTHR_LIBS) \
	$(GLOBUS_FTP_CLIENT_NOTHR_LIBS) \
	$(CGSI_GSOAP_LIBS) \
	$(GSOAP_LIBS)
endif


libgfal_srm_ifce_la_CFLAGS = \
	$(GLOBUS_NOTHR_CFLAGS) \
	$(GLITE_CFLAGS) \
	$(GFAL_SRM_IFCE_CFLAGS) \
	$(GSOAP_CFLAGS) \
	$(CGSI_GSOAP_CFLAGS) 

libgfal_srm_ifce_la_LDFLAGS = \
	$(GFAL_SRM_IFCE_CFLAGS) \
	-version-info $(INTERFACE_LIBTOOL_CURRENT):$(INTERFACE_LIBTOOL_REVISION):$(INTERFACE_LIBTOOL_AGE)
	
# libraries
lib_LIBRARIES = \
	libgfal_srm_ifce.a

# shared libraries
lib_LTLIBRARIES = \
	libgfal_srm_ifce.la
	


endif

# gfal_version
#-------------------------------------------------------------------------------
gfal_srm_ifce_version_SOURCES = gfal_srm_ifce_version.c
gfal_srm_ifce_version_LDADD = libgfal_srm_ifce.la
gfal_srm_ifce_version_CFLAGS = $(GFAL_SRM_IFCE_CFLAGS)

# TODO REMOVE NEXT LINE
# $(top_builddir)/src/libgfal_srm_ifce.la

# test programs
#-------------------------------------------------------------------------------
if TESTS

gfal_srm_ifce_unittest_SOURCES = \
	gfal_srm_ifce_unittest.c \
	gfal_srm_ifce_unittest_srmls.c \
	gfal_srm_ifce_unittest_common.c 
	
gfal_srm_ifce_unittest_LDADD = -lgfal_srm_ifce $(CCHECK_LIBS)
gfal_srm_ifce_unittest_CFLAGS = $(GFAL_SRM_IFCE_CFLAGS) $(CCHECK_CFLAGS)  $(GSOAP_CFLAGS) $(CGSI_GSOAP_CFLAGS) 

gfal_srm_ifce_systemtest_SOURCES = gfal_srm_ifce_systemtest.c
gfal_srm_ifce_systemtest_LDADD = -lgfal_srm_ifce $(CCHECK_LIBS)
gfal_srm_ifce_systemtest_CFLAGS = $(GFAL_SRM_IFCE_CFLAGS) $(CCHECK_CFLAGS) $(GSOAP_CFLAGS) $(CGSI_GSOAP_CFLAGS) 


bin_PROGRAMS +=\
	gfal_srm_ifce_unittest \
    gfal_srm_ifce_systemtest 
    
endif
